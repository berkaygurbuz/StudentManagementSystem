<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AMcDS4bldQyUAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAWcSURBVHhe
        7d3JiyRFGAXwdgWXUVHHo6gHPQhu+A8IihcFV1APogyKnlwuHnTQcQFxQw8K4oq4gOBB1JPgSQd0ZDyo
        qAeXwR13RFFnXN7TgmmaN211f5nZ8cX3Hvyg6amOrPyqpjIzMiJqoUAOg3PgZngGtsA2+B52wPbZz58A
        /+1p4GPPhvXgJMzJcDe8C3/B36vEv2Ubd8FJ4DScdXAtfADqxRzC+3AN7A9OIzkIbgN+jKsXbQzc1q3A
        bTtrlN3gYvgK1Is0hW/hKtgdnAlzFGwG9aKshdfgSHAmyLkw5cf9vH6Ci8AZKfzIvwdU8VvCKwY+V2fA
        7AmPgCp4i56EvcAZICzki6AK3bKXwG+CYPhR+jioAmfAXkVfIQTC3jxV2Ex4TuCsIueBKmhGvjpYYXid
        /yOoYmbEfXE/wZzhMZMdK6qQmXGffD4wRzaAKmAPLgVnmRwAX4IqXg++Bt9AWia8w6YK15NbwBHZD3h3
        TRWtJ7yPwbELzpJwoIUqWI+4r86ScLSNKlaPuK/OonAMnypUzzzGcFHYXaqK1LM7wZmFI29VkXr2DjjI
        oRAZup0V95lzFsqHkzZUgSrgvpfPJlDFqeAmKB8OmlDFqYBDx8rnDVDFqYD7Xj6cqKmKUwEnpJbPd6CK
        UwHvfZTP76CKUwH3vXwqvwF+g/LxIaB4fBJYPJUvA1+H8nFHUPGwO1QVp4IboXy4GpcqTgXc9/KpfDuY
        ++4gHByhitSzt8GZ5Q5QReoZ99mZ5URQRerZCeAsSqVxge+BsyRXgypWj7ivzpJUmRrGex9eanYX4cRJ
        VbSecCVyZxfh9PAvQBWuB54ePke4iIIqXg8uAed/wqXhXgVVwMy4T15BdM4cDj0NFPkBvEjUCtPTMnEX
        grOKcAatKmgm7vINhMfMx0AVNgMvFTtAvFi04+Xinf8OBxlWEuEx35d7I4bDqFr9ypgLwJkgvKZuaT1h
        dvIcAc6E4cesvzbO+ffmCu8iTnlYYC8l7+odCE4j4T12rsA55oKTHMnDwRy+n994uAgjexE52jgy5Jx/
        y9G7PLPnuEUnYTj2nlcOnIH0FHAu4kfAQ8YfM/yZv+NcPT6Gjz0LPG7fcRzHcRzHcRzHcRyn8fD+wLFw
        OnCewUa4He6FB+EJeBY4aof4M3/Hf+Nj+Fj+Df+WbbAtT+hoLHvAMXA+8PsGnwf21f8Cqlt3CGyb2+C2
        eAOK2z4a+FyckbMeWPAHgN25Y77QK8Xnwud0P/A5ugt5gHC28KnAj+M34U9QxW/Vh8BDCt8QPnzMmX2B
        BXsBelpDeAdw1NDl4DEES8IX/UzgSVhLH+tj4QLRfINzNBNnQ5cN18h5GH4FVagK+IZ/CI6HEuHZMv+3
        vwyqIJXxPIefCl3OJ+BJ0A3wOaidt50+g+uhi3MFnslfBy2O428dB55yZFLK84S9gWe8PS/3MpVvgP+J
        9oHmw/Hxl8GnoHbGVo813QDNzkE4DjaDevI2HJ4s8uv2mwmv43msqvzlT1PbDvfBOljTnAEfg3qSNj5e
        MXApncnDE5JHQT0pmx5fi8lOEg8BHofUE7G1swUOhlHDzom3QD0BW3tbYbR+A07Hfg7Uhq0dHKwyygol
        V4LaoLXnChg0HOHi7tw82I3Mc7XBsgnUhqxdg30nIW9Psj9abcTaxaXpubxeOKeB2oC17xQIJ8PafKYN
        sk7xK6Aat/Zx5FU4vrWb1zYIp8JI3V79DOFU/GLnXvC1C0c1bHmEoxq1PMJRjVoe4ahGLY9wVKOWRziq
        UcsjHNWo5RGOatTyCEc1anmEoxq1PMJRjVoe4ahGLY9wVKOWRziqUcsjHNWo5RGOatTyCEc1anmEoxq1
        PMJRjVoe4ahGLY9wVKOWRziqUcsjHNWo5RGOatTyCEc1anmEoxq1PMJRjVoey2Rh4R8pcfgRtX/f3AAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>